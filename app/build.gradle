apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "com.hulldiscover.zeus.marvelcomics"
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }

    // This is important, it will run lint checks but won't abort build
    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "API_KEY", "\""+getApiKey()+"\""
        }
    }
}

def getApiKey(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['API_KEY']
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'com.android.support:design:24.0.0'
    compile 'com.android.support:support-v4:24.0.0'
    compile 'com.android.support:cardview-v7:24.0.0'
    compile 'com.android.support:recyclerview-v7:24.0.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'com.github.ksoichiro:android-observablescrollview:1.5.2'

    // HTTP client
    compile 'com.squareup.okhttp3:okhttp:3.3.1'

    // APIs that allow you to quickly build and run instrumented test code
    androidTestCompile 'com.android.support:support-annotations:24.0.0'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'

    // Hamcrest library
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'

    // JUnit 4 framework
    testCompile 'junit:junit:4.12'

    // Mockito framework
    testCompile 'org.mockito:mockito-core:2.0.81-beta'

}
